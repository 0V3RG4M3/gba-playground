use crate::fixed::Fixed;

pub fn fast_recip(v: u8) -> Fixed<i32, 30> {
    let raw = match v {
        0 => panic!("attempt to divide by zero"),
        1 => 1073741824,
        2 => 536870912,
        3 => 357913941,
        4 => 268435456,
        5 => 214748365,
        6 => 178956971,
        7 => 153391689,
        8 => 134217728,
        9 => 119304647,
        10 => 107374182,
        11 => 97612893,
        12 => 89478485,
        13 => 82595525,
        14 => 76695845,
        15 => 71582788,
        16 => 67108864,
        17 => 63161284,
        18 => 59652324,
        19 => 56512728,
        20 => 53687091,
        21 => 51130563,
        22 => 48806447,
        23 => 46684427,
        24 => 44739243,
        25 => 42949673,
        26 => 41297762,
        27 => 39768216,
        28 => 38347922,
        29 => 37025580,
        30 => 35791394,
        31 => 34636833,
        32 => 33554432,
        33 => 32537631,
        34 => 31580642,
        35 => 30678338,
        36 => 29826162,
        37 => 29020049,
        38 => 28256364,
        39 => 27531842,
        40 => 26843546,
        41 => 26188825,
        42 => 25565282,
        43 => 24970740,
        44 => 24403223,
        45 => 23860929,
        46 => 23342214,
        47 => 22845571,
        48 => 22369621,
        49 => 21913098,
        50 => 21474836,
        51 => 21053761,
        52 => 20648881,
        53 => 20259280,
        54 => 19884108,
        55 => 19522579,
        56 => 19173961,
        57 => 18837576,
        58 => 18512790,
        59 => 18199014,
        60 => 17895697,
        61 => 17602325,
        62 => 17318417,
        63 => 17043521,
        64 => 16777216,
        65 => 16519105,
        66 => 16268816,
        67 => 16025997,
        68 => 15790321,
        69 => 15561476,
        70 => 15339169,
        71 => 15123124,
        72 => 14913081,
        73 => 14708792,
        74 => 14510025,
        75 => 14316558,
        76 => 14128182,
        77 => 13944699,
        78 => 13765921,
        79 => 13591669,
        80 => 13421773,
        81 => 13256072,
        82 => 13094412,
        83 => 12936648,
        84 => 12782641,
        85 => 12632257,
        86 => 12485370,
        87 => 12341860,
        88 => 12201612,
        89 => 12064515,
        90 => 11930465,
        91 => 11799361,
        92 => 11671107,
        93 => 11545611,
        94 => 11422785,
        95 => 11302546,
        96 => 11184811,
        97 => 11069503,
        98 => 10956549,
        99 => 10845877,
        100 => 10737418,
        101 => 10631107,
        102 => 10526881,
        103 => 10424678,
        104 => 10324441,
        105 => 10226113,
        106 => 10129640,
        107 => 10034970,
        108 => 9942054,
        109 => 9850842,
        110 => 9761289,
        111 => 9673350,
        112 => 9586981,
        113 => 9502140,
        114 => 9418788,
        115 => 9336885,
        116 => 9256395,
        117 => 9177281,
        118 => 9099507,
        119 => 9023041,
        120 => 8947849,
        121 => 8873899,
        122 => 8801162,
        123 => 8729608,
        124 => 8659208,
        125 => 8589935,
        126 => 8521761,
        127 => 8454660,
        128 => 8388608,
        129 => 8323580,
        130 => 8259552,
        131 => 8196502,
        132 => 8134408,
        133 => 8073247,
        134 => 8012999,
        135 => 7953643,
        136 => 7895160,
        137 => 7837532,
        138 => 7780738,
        139 => 7724761,
        140 => 7669584,
        141 => 7615190,
        142 => 7561562,
        143 => 7508684,
        144 => 7456540,
        145 => 7405116,
        146 => 7354396,
        147 => 7304366,
        148 => 7255012,
        149 => 7206321,
        150 => 7158279,
        151 => 7110873,
        152 => 7064091,
        153 => 7017920,
        154 => 6972350,
        155 => 6927367,
        156 => 6882960,
        157 => 6839120,
        158 => 6795834,
        159 => 6753093,
        160 => 6710886,
        161 => 6669204,
        162 => 6628036,
        163 => 6587373,
        164 => 6547206,
        165 => 6507526,
        166 => 6468324,
        167 => 6429592,
        168 => 6391320,
        169 => 6353502,
        170 => 6316128,
        171 => 6279192,
        172 => 6242685,
        173 => 6206600,
        174 => 6170930,
        175 => 6135668,
        176 => 6100806,
        177 => 6066338,
        178 => 6032257,
        179 => 5998558,
        180 => 5965232,
        181 => 5932275,
        182 => 5899680,
        183 => 5867442,
        184 => 5835553,
        185 => 5804010,
        186 => 5772806,
        187 => 5741935,
        188 => 5711393,
        189 => 5681174,
        190 => 5651273,
        191 => 5621685,
        192 => 5592405,
        193 => 5563429,
        194 => 5534752,
        195 => 5506368,
        196 => 5478275,
        197 => 5450466,
        198 => 5422939,
        199 => 5395688,
        200 => 5368709,
        201 => 5341999,
        202 => 5315554,
        203 => 5289369,
        204 => 5263440,
        205 => 5237765,
        206 => 5212339,
        207 => 5187159,
        208 => 5162220,
        209 => 5137521,
        210 => 5113056,
        211 => 5088824,
        212 => 5064820,
        213 => 5041041,
        214 => 5017485,
        215 => 4994148,
        216 => 4971027,
        217 => 4948119,
        218 => 4925421,
        219 => 4902931,
        220 => 4880645,
        221 => 4858560,
        222 => 4836675,
        223 => 4814986,
        224 => 4793490,
        225 => 4772186,
        226 => 4751070,
        227 => 4730140,
        228 => 4709394,
        229 => 4688829,
        230 => 4668443,
        231 => 4648233,
        232 => 4628198,
        233 => 4608334,
        234 => 4588640,
        235 => 4569114,
        236 => 4549753,
        237 => 4530556,
        238 => 4511520,
        239 => 4492644,
        240 => 4473924,
        241 => 4455360,
        242 => 4436950,
        243 => 4418691,
        244 => 4400581,
        245 => 4382620,
        246 => 4364804,
        247 => 4347133,
        248 => 4329604,
        249 => 4312216,
        250 => 4294967,
        251 => 4277856,
        252 => 4260880,
        253 => 4244039,
        254 => 4227330,
        255 => 4210752,
    };
    Fixed::from_raw(raw)
}

pub fn fast_sin(angle: u8) -> Fixed<i32, 30> {
    let raw = match angle {
        0 => 0,
        1 => 26350943,
        2 => 52686014,
        3 => 78989349,
        4 => 105245103,
        5 => 131437462,
        6 => 157550647,
        7 => 183568930,
        8 => 209476638,
        9 => 235258165,
        10 => 260897982,
        11 => 286380643,
        12 => 311690799,
        13 => 336813204,
        14 => 361732726,
        15 => 386434353,
        16 => 410903207,
        17 => 435124548,
        18 => 459083786,
        19 => 482766489,
        20 => 506158392,
        21 => 529245404,
        22 => 552013618,
        23 => 574449320,
        24 => 596538995,
        25 => 618269338,
        26 => 639627258,
        27 => 660599890,
        28 => 681174602,
        29 => 701339000,
        30 => 721080937,
        31 => 740388522,
        32 => 759250125,
        33 => 777654384,
        34 => 795590213,
        35 => 813046808,
        36 => 830013654,
        37 => 846480531,
        38 => 862437520,
        39 => 877875009,
        40 => 892783698,
        41 => 907154608,
        42 => 920979082,
        43 => 934248793,
        44 => 946955747,
        45 => 959092290,
        46 => 970651112,
        47 => 981625251,
        48 => 992008094,
        49 => 1001793390,
        50 => 1010975242,
        51 => 1019548121,
        52 => 1027506862,
        53 => 1034846671,
        54 => 1041563127,
        55 => 1047652185,
        56 => 1053110176,
        57 => 1057933813,
        58 => 1062120190,
        59 => 1065666786,
        60 => 1068571464,
        61 => 1070832474,
        62 => 1072448455,
        63 => 1073418433,
        64 => 1073741824,
        65..=127 => fast_sin(128 - angle).into_raw(),
        128..=255 => -fast_sin(angle - 128).into_raw(),
    };
    Fixed::from_raw(raw)
}

pub fn fast_cos(angle: u8) -> Fixed<i32, 30> {
    match angle {
        0..=191 => fast_sin(angle + 64),
        192..=255 => fast_sin(angle - 192),
    }
}

pub fn fast_atan2(x: i32, y: i32) -> u8 {
    if y == 0 {
        return if x >= 0 { 0 } else { 128 };
    }
    if x == 0 {
        return if y >= 0 { 64 } else { 192 };
    }
    if x < 0 && y < 0 {
        return 128 + fast_atan2(-x, -y);
    }
    if x < 0 {
        return 128 - fast_atan2(-x, y);
    }
    if y < 0 {
        return 0 - fast_atan2(x, -y);
    }
    let q = ((y << 24) / x) as u32;
    match q {
        0..411858 => 0,
        411858..824212 => 1,
        824212..1237562 => 2,
        1237562..1652412 => 3,
        1652412..2069272 => 4,
        2069272..2488665 => 5,
        2488665..2911123 => 6,
        2911123..3337196 => 7,
        3337196..3767450 => 8,
        3767450..4202474 => 9,
        4202474..4642881 => 10,
        4642881..5089313 => 11,
        5089313..5542444 => 12,
        5542444..6002984 => 13,
        6002984..6471686 => 14,
        6471686..6949350 => 15,
        6949350..7436828 => 16,
        7436828..7935032 => 17,
        7935032..8444941 => 18,
        8444941..8967609 => 19,
        8967609..9504175 => 20,
        9504175..10055876 => 21,
        10055876..10624055 => 22,
        10624055..11210177 => 23,
        11210177..11815849 => 24,
        11815849..12442831 => 25,
        12442831..13093068 => 26,
        13093068..13768705 => 27,
        13768705..14472126 => 28,
        14472126..15205982 => 29,
        15205982..15973237 => 30,
        15973237..16777216 => 31,
        16777216..17621661 => 32,
        17621661..18510805 => 33,
        18510805..19449456 => 34,
        19449456..20443097 => 35,
        20443097..21498016 => 36,
        21498016..22621457 => 37,
        22621457..23821816 => 38,
        23821816..25108878 => 39,
        25108878..26494119 => 40,
        26494119..27991094 => 41,
        27991094..29615928 => 42,
        29615928..31387963 => 43,
        31387963..33330604 => 44,
        33330604..35472443 => 45,
        35472443..37848793 => 46,
        37848793..40503782 => 47,
        40503782..43493297 => 48,
        43493297..46889178 => 49,
        46889178..50785358 => 50,
        50785358..55307069 => 51,
        55307069..60625069 => 52,
        60625069..66978401 => 53,
        66978401..74712336 => 54,
        74712336..84344761 => 55,
        84344761..96689478 => 56,
        96689478..113102803 => 57,
        113102803..136026074 => 58,
        136026074..170341933 => 59,
        170341933..227443168 => 60,
        227443168..341508077 => 61,
        341508077..683428012 => 62,
        683428012.. => 63,
    }
}
